# Update bump details accordingly. Use bump check to confirm.
# bump: popt-version /POPT_VERSION="(.*)"/ https://github.com/rpm-software-management/popt.git|semver:*
# POPT_VERSION="V.R.M" # Specify a stable release
# export ZOPEN_STABLE_TAG="v${POPT_VERSION}"
export ZOPEN_STABLE_URL="https://github.com/rpm-software-management/popt.git"
export ZOPEN_STABLE_DEPS="zoslib make cmake"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="development"

export ZOPEN_COMP="CLANG"

export ZOPEN_CONFIGURE="cmake"
export ZOPEN_CONFIGURE_OPTS="-B ../build --install-prefix \"\$ZOPEN_INSTALL_DIR/\" . "

export ZOPEN_MAKE="cmake"
export ZOPEN_MAKE_OPTS="--build ../build --parallel \$ZOPEN_NUM_JOBS --config Release"
export ZOPEN_MAKE_MINIMAL=Y

export ZOPEN_INSTALL="cmake"
export ZOPEN_INSTALL_OPTS="--install ../build"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_append_to_env()
{
cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
  export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
  export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
  export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -lpopt"
fi
ZZ
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo "1.0.0"
}
